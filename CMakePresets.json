{
  "version": 8,
  "$schema": "https://cmake.org/cmake/help/latest/_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json",
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 23
  },
  "configurePresets": [
    {
      "name": "conf-base",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/${presetName}",
      "cacheVariables": {
        "ENABLE_WARNINGS": "ON",
        "ENABLE_STRICT_WARNINGS": "ON",
        "ENABLE_TESTING": "ON",
        "ENABLE_COVERAGE": "OFF",
        "ENABLE_BENCHMARKS": "OFF",
        "BUILD_APP": "OFF",
        "ENABLE_ASAN": "OFF",
        "ENABLE_UBSAN": "OFF",
        "ENABLE_SANITIZERS": "OFF",
        "ENABLE_CPPCHECK": "ON",
        "ENABLE_CLANG_TIDY": "ON",
        "ENABLE_CLANG_FORMAT": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      },
      "description": "Shared settings for all configurations"
    },
    {
      "name": "conf-base-gcc",
      "hidden": true,
      "inherits": "conf-base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++"
      },
      "description": "Base settings for GCC configurations"
    },
    {
      "name": "conf-base-clang",
      "hidden": true,
      "inherits": "conf-base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      },
      "description": "Base settings for Clang configurations"
    },
    {
      "name": "gcc-Debug",
      "inherits": "conf-base-gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      },
      "description": "GCC Debug build"
    },
    {
      "name": "gcc-Release",
      "inherits": "conf-base-gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      },
      "description": "GCC Release build"
    },
    {
      "name": "gcc-RelWithDebInfo",
      "inherits": "conf-base-gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo"
      },
      "description": "GCC RelWithDebInfo build"
    },
    {
      "name": "gcc-Sanitize",
      "inherits": "conf-base-gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "ENABLE_SANITIZERS": "ON"
      },
      "description": "GCC build with sanitizers"
    },
    {
      "name": "gcc-Coverage",
      "inherits": "conf-base-gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Coverage",
        "ENABLE_COVERAGE": "ON"
      },
      "description": "GCC build for coverage analysis"
    },
    {
      "name": "gcc-Release-Bench",
      "inherits": "conf-base-gcc",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "ENABLE_BENCHMARKS": "ON",
        "ENABLE_TESTING": "OFF"
      },
      "description": "GCC Release build with benchmarks"
    },
    {
      "name": "clang-Debug",
      "inherits": "conf-base-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      },
      "description": "Clang Debug build"
    },
    {
      "name": "clang-Release",
      "inherits": "conf-base-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      },
      "description": "Clang Release build"
    },
    {
      "name": "clang-RelWithDebInfo",
      "inherits": "conf-base-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo"
      },
      "description": "Clang RelWithDebInfo build"
    },
    {
      "name": "clang-Sanitize",
      "inherits": "conf-base-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "ENABLE_SANITIZERS": "ON"
      },
      "description": "Clang build with sanitizers"
    },
    {
      "name": "clang-Coverage",
      "inherits": "conf-base-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Coverage",
        "ENABLE_COVERAGE": "ON"
      },
      "description": "Clang build for coverage analysis"
    },
    {
      "name": "clang-Release-Bench",
      "inherits": "conf-base-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "ENABLE_BENCHMARKS": "ON",
        "ENABLE_TESTING": "OFF"
      },
      "description": "Clang Release build with benchmarks"
    }
  ],
  "buildPresets": [
    {
      "name": "build-base",
      "hidden": true,
      "jobs": 0,
      "verbose": false,
      "inheritConfigureEnvironment": true,
      "description": "Shared build settings for all configurations"
    },
    {
      "name": "gcc-Debug",
      "inherits": "build-base",
      "configurePreset": "gcc-Debug",
      "description": "Build using gcc-Debug configuration"
    },
    {
      "name": "gcc-Release",
      "inherits": "build-base",
      "configurePreset": "gcc-Release",
      "description": "Build using gcc-Release configuration"
    },
    {
      "name": "gcc-RelWithDebInfo",
      "inherits": "build-base",
      "configurePreset": "gcc-RelWithDebInfo",
      "description": "Build using gcc-RelWithDebInfo configuration"
    },
    {
      "name": "gcc-Sanitize",
      "inherits": "build-base",
      "configurePreset": "gcc-Sanitize",
      "description": "Build using gcc-Sanitize configuration"
    },
    {
      "name": "gcc-Coverage",
      "inherits": "build-base",
      "configurePreset": "gcc-Coverage",
      "description": "Build using gcc-Coverage configuration"
    },
    {
      "name": "gcc-Release-Bench",
      "inherits": "build-base",
      "configurePreset": "gcc-Release-Bench",
      "description": "Build using gcc-Release-Bench configuration"
    },
    {
      "name": "clang-Debug",
      "inherits": "build-base",
      "configurePreset": "clang-Debug",
      "description": "Build using clang-Debug configuration"
    },
    {
      "name": "clang-Release",
      "inherits": "build-base",
      "configurePreset": "clang-Release",
      "description": "Build using clang-Release configuration"
    },
    {
      "name": "clang-RelWithDebInfo",
      "inherits": "build-base",
      "configurePreset": "clang-RelWithDebInfo",
      "description": "Build using clang-RelWithDebInfo configuration"
    },
    {
      "name": "clang-Sanitize",
      "inherits": "build-base",
      "configurePreset": "clang-Sanitize",
      "description": "Build using clang-Sanitize configuration"
    },
    {
      "name": "clang-Coverage",
      "inherits": "build-base",
      "configurePreset": "clang-Coverage",
      "description": "Build using clang-Coverage configuration"
    },
    {
      "name": "clang-Release-Bench",
      "inherits": "build-base",
      "configurePreset": "clang-Release-Bench",
      "description": "Build using clang-Release-Bench configuration"
    }
  ],
  "testPresets": [
    {
      "name": "test-base",
      "hidden": true,
      "description": "Shared test settings for all configurations",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "noTestsAction": "error",
        "stopOnFailure": true
      }
    },
    {
      "name": "gcc-Debug",
      "inherits": "test-base",
      "configurePreset": "gcc-Debug",
      "description": "Test using gcc-Debug configuration"
    },
    {
      "name": "gcc-Release",
      "inherits": "test-base",
      "configurePreset": "gcc-Release",
      "description": "Test using gcc-Release configuration"
    },
    {
      "name": "gcc-RelWithDebInfo",
      "inherits": "test-base",
      "configurePreset": "gcc-RelWithDebInfo",
      "description": "Test using gcc-RelWithDebInfo configuration"
    },
    {
      "name": "gcc-Sanitize",
      "inherits": "test-base",
      "configurePreset": "gcc-Sanitize",
      "description": "Test using gcc-Sanitize configuration"
    },
    {
      "name": "gcc-Coverage",
      "inherits": "test-base",
      "configurePreset": "gcc-Coverage",
      "description": "Test using gcc-Coverage configuration"
    },
    {
      "name": "clang-Debug",
      "inherits": "test-base",
      "configurePreset": "clang-Debug",
      "description": "Test using clang-Debug configuration"
    },
    {
      "name": "clang-Release",
      "inherits": "test-base",
      "configurePreset": "clang-Release",
      "description": "Test using clang-Release configuration"
    },
    {
      "name": "clang-RelWithDebInfo",
      "inherits": "test-base",
      "configurePreset": "clang-RelWithDebInfo",
      "description": "Test using clang-RelWithDebInfo configuration"
    },
    {
      "name": "clang-Sanitize",
      "inherits": "test-base",
      "configurePreset": "clang-Sanitize",
      "description": "Test using clang-Sanitize configuration"
    },
    {
      "name": "clang-Coverage",
      "inherits": "test-base",
      "configurePreset": "clang-Coverage",
      "description": "Test using clang-Coverage configuration"
    }
  ],
  "packagePresets": [
    {
      "name": "package-base",
      "hidden": true,
      "inheritConfigureEnvironment": true,
      "generators": [
        "TGZ",
        "ZIP"
      ]
    },
    {
      "name": "package-gcc-Release",
      "inherits": "package-base",
      "displayName": "Package GCC Release with CPack",
      "description": "Configure, build, then run CPack to create distributables",
      "configurePreset": "gcc-Release"
    },
    {
      "name": "package-clang-Release",
      "inherits": "package-base",
      "displayName": "Package Clang Release with CPack",
      "description": "Configure, build, then run CPack to create distributables",
      "configurePreset": "clang-Release"
    }
  ],
  "workflowPresets": [
    {
      "name": "check-sanitize",
      "displayName": "Sanitize → Test",
      "description": "Configure with sanitizers, build, and run tests",
      "steps": [
        {
          "type": "configure",
          "name": "gcc-Sanitize"
        },
        {
          "type": "build",
          "name": "gcc-Sanitize"
        },
        {
          "type": "test",
          "name": "gcc-Sanitize"
        }
      ]
    },
    {
      "name": "coverage-report",
      "displayName": "Coverage → Test",
      "description": "Configure Coverage, build, run tests",
      "steps": [
        {
          "type": "configure",
          "name": "gcc-Coverage"
        },
        {
          "type": "build",
          "name": "gcc-Coverage"
        },
        {
          "type": "test",
          "name": "gcc-Coverage"
        }
      ]
    },
    {
      "name": "gcc-Release-dist",
      "displayName": "Build → Package All",
      "description": "Configure, build all, then run CPack",
      "steps": [
        {
          "type": "configure",
          "name": "gcc-Release"
        },
        {
          "type": "build",
          "name": "gcc-Release"
        },
        {
          "type": "package",
          "name": "package-gcc-Release"
        }
      ]
    },
    {
      "name": "clang-Release-dist",
      "displayName": "Build → Package All",
      "description": "Configure, build all, then run CPack",
      "steps": [
        {
          "type": "configure",
          "name": "clang-Release"
        },
        {
          "type": "build",
          "name": "clang-Release"
        },
        {
          "type": "package",
          "name": "package-clang-Release"
        }
      ]
    }
  ]
}