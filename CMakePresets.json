{
  "version": 4,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 23
  },
  "configurePresets": [
    {
      "name": "base",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/${presetName}",
      "cacheVariables": {
        "ENABLE_TESTING": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      },
      "description": "Common settings for all configurations"
    },
    {
      "name": "gcc-RelWithDebInfo",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo"
      },
      "description": "GCC build with RelWithDebInfo configuration"
    },
    {
      "name": "gcc-Sanitize",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_BUILD_TYPE": "Sanitize"
      },
      "description": "GCC build with custom Sanitize configuration"
    },
    {
      "name": "clang-RelWithDebInfo",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo"
      },
      "description": "Clang build with RelWithDebInfo configuration"
    },
    {
      "name": "clang-Sanitize",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_BUILD_TYPE": "Sanitize"
      },
      "description": "Clang build with custom Sanitize configuration"
    }
  ],
  "buildPresets": [
    {
      "name": "gcc-RelWithDebInfo",
      "configurePreset": "gcc-RelWithDebInfo",
      "description": "Build using gcc-RelWithDebInfo configuration"
    },
    {
      "name": "gcc-Sanitize",
      "configurePreset": "gcc-Sanitize",
      "description": "Build using gcc-Sanitize configuration"
    },
    {
      "name": "clang-RelWithDebInfo",
      "configurePreset": "clang-RelWithDebInfo",
      "description": "Build using clang-RelWithDebInfo configuration"
    },
    {
      "name": "clang-Sanitize",
      "configurePreset": "clang-Sanitize",
      "description": "Build using clang-Sanitize configuration"
    }
  ],
  "testPresets": [
    {
      "name": "test-base",
      "hidden": true,
      "description": "Common test settings for all configurations",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "noTestsAction": "error",
        "stopOnFailure": true
      }
    },
    {
      "name": "gcc-RelWithDebInfo",
      "inherits": "test-base",
      "configurePreset": "gcc-RelWithDebInfo",
      "description": "Test using gcc-RelWithDebInfo configuration"
    },
    {
      "name": "gcc-Sanitize",
      "inherits": "test-base",
      "configurePreset": "gcc-Sanitize",
      "description": "Test using gcc-Sanitize configuration"
    },
    {
      "name": "clang-RelWithDebInfo",
      "inherits": "test-base",
      "configurePreset": "clang-RelWithDebInfo",
      "description": "Test using clang-RelWithDebInfo configuration"
    },
    {
      "name": "clang-Sanitize",
      "inherits": "test-base",
      "configurePreset": "clang-Sanitize",
      "description": "Test using clang-Sanitize configuration"
    }
  ]
}
